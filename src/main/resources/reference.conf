druid = {

  host = "localhost"
  host = ${?DRUID_HOST}
  port = 8082
  port = ${?DRUID_PORT}
  hosts = ${druid.host}":"${druid.port}
  hosts = ${?DRUID_HOSTS}

  secure = false
  secure = ${?DRUID_USE_SECURE_CONNECTION}

  url = "/druid/v2/"
  url = ${?DRUID_URL}

  health-endpoint = "/status/health"
  health-endpoint = ${?DRUID_HEALTH_ENDPOINT}

  //client-backend = "ing.wbaa.druid.client.DruidAdvancedHttpClient"
  client-backend = "ing.wbaa.druid.client.DruidHttpClient"
  client-backend = ${?DRUID_CLIENT_BACKEND}

  // When it is required, Scruid also supports legacy mode in Scan Queries. By default, legacy mode is turned off.
  // For details see https://druid.apache.org/docs/latest/querying/scan-query.html#legacy-mode
  scan-query-legacy-mode = false
  scan-query-legacy-mode = ${?DRUID_SCAN_QUERY_LEGACY_MODE}

  client-config = {

    druid-advanced-http-client ={

        queue-size = 32768
        queue-overflow-strategy = "Backpressure"
        query-retries = 5
        query-retry-delay = 10 ms

        host-connection-pool = {
            max-connections = 32
            min-connections = 0
            max-open-requests = 128
            max-connection-lifetime = 15 min
        }

        request-interceptor = "ing.wbaa.druid.client.NoopRequestInterceptor"

        request-interceptor-config = { }
    }

  }

  datasource = "wikipedia"
  datasource = ${?DRUID_DATASOURCE}

  response-parsing-timeout = 5 seconds
  response-parsing-timeout = ${?DRUID_RESPONSE_PARSING_TIMEOUT}
}


akka {
  log-dead-letters-during-shutdown = off
  log-dead-letters = off
}
